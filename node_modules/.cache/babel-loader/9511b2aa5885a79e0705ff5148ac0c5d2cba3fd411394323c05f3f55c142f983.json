{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nconst Protected = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate;\n  const {\n    isLoggedIn,\n    token,\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (!token && isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate, token]);\n  return children;\n};\n_s(Protected, \"cyo80CWWeimWYIyD9pY5FFlIvik=\", false, function () {\n  return [useSelector];\n});\n_c = Protected;\nexport default Protected;\nvar _c;\n$RefreshReg$(_c, \"Protected\");","map":{"version":3,"names":["useEffect","useSelector","useNavigate","Protected","_ref","_s","children","navigate","isLoggedIn","token","user","state","auth","_c","$RefreshReg$"],"sources":["/home/fahmiazzuhri/Documents/GitHub/miflix/src/components/Protected.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Protected = ({ children }) => {\n  const navigate = useNavigate;\n  const { isLoggedIn, token, user } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!token && isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate, token]);\n  return children;\n};\n\nexport default Protected;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7B,MAAMG,QAAQ,GAAGL,WAAW;EAC5B,MAAM;IAAEM,UAAU;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEtEZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,KAAK,IAAID,UAAU,EAAE;MACxBD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACC,UAAU,EAAED,QAAQ,EAAEE,KAAK,CAAC,CAAC;EACjC,OAAOH,QAAQ;AACjB,CAAC;AAACD,EAAA,CAVIF,SAAS;EAAA,QAEuBF,WAAW;AAAA;AAAAY,EAAA,GAF3CV,SAAS;AAYf,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}