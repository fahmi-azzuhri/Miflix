{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { setIsLoggedIn, setToken } from \"../reducers/auth\";\nexport const login = (data, navigate) => async dispatch => {\n  try {\n    var _response$data;\n    const response = await axios.post(`${process.env.REACT_APP_AUTH_API}/api/v1/auth/login`, data, {\n      \"Content-Type\": \"application/json\"\n    });\n    const {\n      token\n    } = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n    dispatch(setToken(token));\n    dispatch(setIsLoggedIn(true));\n\n    // redirect to dashboard\n    navigate(\"/dashboard\");\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response, _error$response$data;\n      toast.error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n      return;\n    }\n    toast.error(error.message);\n  }\n};\nexport const register = (data, navigate) => async dispatch => {\n  try {\n    var _response$data2;\n    const response = await axios.post(`${process.env.REACT_APP_AUTH_API}/api/v1/auth/register`, data, {\n      \"Content-Type\": \"application/json\"\n    });\n    const {\n      token\n    } = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data;\n    dispatch(setToken(token));\n    dispatch(setIsLoggedIn(true));\n\n    // redirect to login page\n    navigate(\"/login\");\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response2, _error$response2$data;\n      toast.error(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n    }\n    toast.error(error.message);\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch(setToken(null));\n  dispatch(setIsLoggedIn(false));\n};","map":{"version":3,"names":["axios","toast","setIsLoggedIn","setToken","login","data","navigate","dispatch","_response$data","response","post","process","env","REACT_APP_AUTH_API","token","error","isAxiosError","_error$response","_error$response$data","message","register","_response$data2","_error$response2","_error$response2$data","logout"],"sources":["/home/fahmiazzuhri/Documents/GitHub/miflix/src/redux/actions/auth.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { setIsLoggedIn, setToken } from \"../reducers/auth\";\n\nexport const login = (data, navigate) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_AUTH_API}/api/v1/auth/login`,\n      data,\n      { \"Content-Type\": \"application/json\" }\n    );\n\n    const { token } = response?.data?.data;\n\n    dispatch(setToken(token));\n    dispatch(setIsLoggedIn(true));\n\n    // redirect to dashboard\n    navigate(\"/dashboard\");\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      toast.error(error?.response?.data?.message);\n      return;\n    }\n\n    toast.error(error.message);\n  }\n};\n\nexport const register = (data, navigate) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_AUTH_API}/api/v1/auth/register`,\n      data,\n      { \"Content-Type\": \"application/json\" }\n    );\n\n    const { token } = response?.data?.data;\n\n    dispatch(setToken(token));\n    dispatch(setIsLoggedIn(true));\n\n    // redirect to login page\n    navigate(\"/login\");\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      toast.error(error?.response?.data?.message);\n    }\n\n    toast.error(error.message);\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch(setToken(null));\n  dispatch(setIsLoggedIn(false));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,aAAa,EAAEC,QAAQ,QAAQ,kBAAkB;AAE1D,OAAO,MAAMC,KAAK,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC3D,IAAI;IAAA,IAAAC,cAAA;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC9B,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,oBAAmB,EACrDR,IAAI,EACJ;MAAE,cAAc,EAAE;IAAmB,CACvC,CAAC;IAED,MAAM;MAAES;IAAM,CAAC,GAAGL,QAAQ,aAARA,QAAQ,wBAAAD,cAAA,GAARC,QAAQ,CAAEJ,IAAI,cAAAG,cAAA,uBAAdA,cAAA,CAAgBH,IAAI;IAEtCE,QAAQ,CAACJ,QAAQ,CAACW,KAAK,CAAC,CAAC;IACzBP,QAAQ,CAACL,aAAa,CAAC,IAAI,CAAC,CAAC;;IAE7B;IACAI,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,IAAIf,KAAK,CAACgB,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAE,eAAA,EAAAC,oBAAA;MAC7BjB,KAAK,CAACc,KAAK,CAACA,KAAK,aAALA,KAAK,wBAAAE,eAAA,GAALF,KAAK,CAAEN,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBZ,IAAI,cAAAa,oBAAA,uBAArBA,oBAAA,CAAuBC,OAAO,CAAC;MAC3C;IACF;IAEAlB,KAAK,CAACc,KAAK,CAACA,KAAK,CAACI,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACf,IAAI,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IAAA,IAAAc,eAAA;IACF,MAAMZ,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC9B,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,uBAAsB,EACxDR,IAAI,EACJ;MAAE,cAAc,EAAE;IAAmB,CACvC,CAAC;IAED,MAAM;MAAES;IAAM,CAAC,GAAGL,QAAQ,aAARA,QAAQ,wBAAAY,eAAA,GAARZ,QAAQ,CAAEJ,IAAI,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBhB,IAAI;IAEtCE,QAAQ,CAACJ,QAAQ,CAACW,KAAK,CAAC,CAAC;IACzBP,QAAQ,CAACL,aAAa,CAAC,IAAI,CAAC,CAAC;;IAE7B;IACAI,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,IAAIf,KAAK,CAACgB,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MAC7BtB,KAAK,CAACc,KAAK,CAACA,KAAK,aAALA,KAAK,wBAAAO,gBAAA,GAALP,KAAK,CAAEN,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBjB,IAAI,cAAAkB,qBAAA,uBAArBA,qBAAA,CAAuBJ,OAAO,CAAC;IAC7C;IAEAlB,KAAK,CAACc,KAAK,CAACA,KAAK,CAACI,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM,MAAOjB,QAAQ,IAAK;EAC9CA,QAAQ,CAACJ,QAAQ,CAAC,IAAI,CAAC,CAAC;EACxBI,QAAQ,CAACL,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}