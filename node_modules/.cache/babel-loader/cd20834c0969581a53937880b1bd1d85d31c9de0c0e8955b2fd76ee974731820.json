{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nconst Protected = children => {\n  _s();\n  const navigate = useNavigate;\n  const {\n    isLoggedIn,\n    token,\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (!token && isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate, token]);\n  return children;\n};\n_s(Protected, \"cyo80CWWeimWYIyD9pY5FFlIvik=\", false, function () {\n  return [useSelector];\n});\n_c = Protected;\nexport default Protected;\nvar _c;\n$RefreshReg$(_c, \"Protected\");","map":{"version":3,"names":["React","useEffect","useSelector","useNavigate","Protected","children","_s","navigate","isLoggedIn","token","user","state","auth","_c","$RefreshReg$"],"sources":["/home/fahmiazzuhri/Documents/GitHub/miflix/src/components/Protected.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Protected = (children) => {\n  const navigate = useNavigate;\n  const { isLoggedIn, token, user } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!token && isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate, token]);\n  return children;\n};\n\nexport default Protected;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGJ,WAAW;EAC5B,MAAM;IAAEK,UAAU;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEtEX,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,KAAK,IAAID,UAAU,EAAE;MACxBD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACC,UAAU,EAAED,QAAQ,EAAEE,KAAK,CAAC,CAAC;EACjC,OAAOJ,QAAQ;AACjB,CAAC;AAACC,EAAA,CAVIF,SAAS;EAAA,QAEuBF,WAAW;AAAA;AAAAW,EAAA,GAF3CT,SAAS;AAYf,eAAeA,SAAS;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}